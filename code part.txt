.model large

.stack 100h

.data                                                                            ;data section
        
                                                                                    
   input_password db 10,13, 'Please Enter the  Password$'                          ;variables for password portion
   password db 'umer $'                                                            ;password is already define / hardcoded
   incorrect_password db 10,13, '      <!>You enterd an Incorrect Password<!>$'               ; 10,13 will take to start of  next line
                          
                          
                          
    welcome1      db 10,13,10,13,'         *************************************************  $'                           ;name of project or name or store     
    welcome2      db 10,13,      '       ((                                                 ))$'
    welcome3       db 10,13,     '       ))                                                 (($'                         ; wellcome message 
    welcome4       db 10,13,     '       ((       WELCOME TO MUHAMMAD MEDICAL STORE         ))$'
    welcome5       db 10,13,     '       ))                                                 (($'   
    welcome6       db 10,13,     '       ((                                                 ))$'
    welcome7       db 10,13,     '         *************************************************  $'
                     


                                         ;***************SELECTING DIFFERNET OPTION FOR OPERATION *********************
                         
   
   msg1 db 10,13,10,13, 'Choose any Option$'
   msg2 db 10,13,10,13, 'What Do You Want To Buy$'
   msg_medicines db 10,13, 'Press 1 to buy medicines$'                            
   medicines_sold db 10,13, 'Press 2 to see medicines statistics$'
   amount_earned db 10,13,'Amount earned= $'                                   
   amount db 0                                                                     
   amount_print db 10,13,'Press 3 to show amount earned today$'              
   input_again db 10,13, 'Please Press one of the above given keys$'
   wrong_input db 10,13, '<!>Wrong Input<!>$'
   exit_program db 10,13,'Press 4 to exit$'   
     total_msg dw 'Total Earned= $'                      
                                  
                                 

                                              ;****************AMOUNT OF EACH MEDICINE **********************         
   
   
   
   
                                        price_of_Biotin dw 4
                                       price_of_Azomax dw 3
                                         price_of_Brufen  dw 2    
                                         price_of_Flagyl dw 2
   
   
    opt1 db 10,13, '1. Biotin - 4rs$'
      msg_Biotin db 10,13, 'How many Biotin  do you want to buy$'  
     
   opt2 db 10,13, '2. Azomax - 3rs$' 
      msg_Azomax db 10,13, 'How many Azomax do you want to buy$'
    
   opt3 db 10,13, '3. Brufen  - 2rs$'
      msg_Brufen db 10,13, 'How many Brufen do you want to buy$'
   
   opt4 db 10,13, '4. Flagyl - 2rs$'
      msg_Flagyl db 10,13, 'How many Flagyl do you want to buy$'
                                      
  
   
                                                                                                   
                                                                                                   
                             
                                           ;******************NEWLINE FUNCTION*********************
                                       
                                        newLine db 10,13, '$'                                                         
     
   Biotin_print db 10,13, 'Biotin sold = $'                                     ;variable for statistics of medicine
   Azomax_print db 10,13, 'Azomax  sold = $'
   Brufensold_print db 10,13, 'Brufensold = $'
  Flagyl _print db 10,13, 'Flagyl  sold = $'  
   
                                                
                                                
  Biotin_sold db 0
  Azomax_sold db 0
  Brufensold_sold db 0                                                              ;variable for statistics of medicine
   Flagyl_sold db 0                                                               ;will show how many  medicine sell
                                                                                   ;will show for each medicine    
   

.code                                                                              ;code section starts
                                               
                                               
                                               
main proc
        
        
    mov ax,@data                                                                   ;accessing data section
    mov ds,ax                                                                      ;mov ax to ds... To access fast( heap initialization )
     
    
    pass:                                                                          ;lable for password
    mov dx,offset input_password                                                   ;print that / load in dx register
    mov ah,9                                                                       ;for output the string
    int 21h                                                                        ;intrepet
    
    mov dx,offset newLine                                                          ;new line
    mov ah,9
    int 21h 
    
    mov bx,offset password                                                         ;print that / load in dx register  
    
    
    mov cx,5                                                                       ; initializing counter register for 5
    l1:
    mov ah,1
    int 21h
    cmp al,[bx]                                                                    ;taking password from user 
    jne incorrect                                                                  ;camparing each element
    inc bx                                                                         ;if password doesnot match so jump to incorrect lable will show mesage in that
    loop l1                                                                        ;lable and then will take input again..... 
          
          
    start:
    mov dx,offset newLine
    mov ah,9
    int 21h
    call menu                                                                      ; call the menu function to display main menu

    mov dx,offset newLine
    mov ah,9
    int 21h    
    
    mov ah,1                                                                       ;after showing the manu  
    int 21h                                                                        ;take input / choice from user 
                                                                                   ;in which menu admin wnat to go
    cmp al,'1'
    je menu2  
    cmp al,'2'                                                                     ;campre user input
    je medicines_stats
    cmp al,'3'
    je show_amount
    cmp al,'4'
    je exit
    
    mov dx,offset wrong_input                                                     ;print that / load in dx register
    mov ah,9                                                                      ;if user enter a key which is wrong so it will display an error message
    int 21h
    mov dx,offset input_again                                                     ;print line that please input again then jump to main menu and 
    mov ah,9                                                                      ;take the user choice again
    int 21h    
    jmp start 

   

   Biotin:                                                                      ;lable for medicine ( panadol)
         
        mov dx,offset msg_Biotin                                                 ;message that asking user to enter quantity
        mov ah,9                                                                  ;output the string
        int 21h                                                                   ;intrept
            
        mov dx,offset newLine
        mov ah,9                                                                  ;move to new line
        int 21h        
        
        mov ah,1                                                                  ;take user input
        int 21h
        
        cmp al,'9'                                                                ;if user enter wrong input show error message
        jg wrong                                                                  
        
        sub al,48                                                                 ;subtract the acssi of 0 from input
        
        add Biotin_sold,al                                                       ;add that quantity in sold , to recronized total sold 
        mul price_of_Biotin
  
        
        add amount,al                                                             ;add that earned amount in total earning
        mov cl,al
        mov dx,offset newLine
        mov ah,9
        int 21h
        mov dx,offset total_msg
        mov ah,9                                                                  ;show the totol of last sell
        int 21h                                                                   ;move the value of cl to dl 
        mov dl,cl                                                                 ;add 48 ( ascci of 0)
        add dl,48                                                                 ;output 
        mov ah,2
        int 21h
        
         
                
        jmp start                                      
                                        
 
   



    menu proc
              
        
              
        mov dx,offset welcome1
        mov ah,9
        int 21h
        
        mov dx,offset welcome2
        mov ah,9
        int 21h
        
        mov dx,offset welcome3
        mov ah,9
        int 21h
        
        mov dx,offset welcome4
        mov ah,9
        int 21h                                                            ; show the wellcome messsage
        
        mov dx,offset welcome5
        mov ah,9
        int 21h
        
        mov dx,offset welcome6
        mov ah,9
        int 21h
        
        mov dx,offset welcome7
        mov ah,9
        int 21h
        
                                                                    
        
        mov dx,offset msg1
        mov ah,9
        int 21h
                                                                            ; will show the front or main menu meaages
        mov dx,offset msg_medicines
        mov ah,9
        int 21h
        
        mov dx,offset medicines_sold
        mov ah,9
        int 21h
        
        mov dx,offset amount_print
        mov ah,9
        int 21h
        
        mov dx,offset exit_program
        mov ah,9
        int 21h                   
        
             
        ret                                                               ;end of that function
          
    menu endp
    

     menu2 proc                                                      ;function that is user for medicines  
                                                                      
        pick:      
        mov dx,offset msg2                                          
        mov ah,9
        int 21h
        
        mov dx,offset opt1
        mov ah,9
        int 21h                                                    ;showing messages / types of medicine avalable in the store 
                                                                   
        mov dx,offset opt2
        mov ah,9                                                   ;asking user that want medicine he/she want to but
        int 21h
            
        mov dx,offset opt3
        mov ah,9
        int 21h
        
        mov dx,offset opt4
        mov ah,9
        int 21h
    
        
        mov dx,offset newLine
        mov ah,9
        int 21h    
                                                                     
        mov ah,1                                                     ;taking input from user ( choice of user)
        int 21h                                                      ;intrept
        
           
           
           
        cmp al,'1'
        je Biotin                                                   ;camparing user input
        cmp al,'2'                                                  
        je Azomax
        cmp al,'3'                                                   ;will jump to lable according to user direction
        je Brufen
        cmp al,'4'
        je Flagyl
        
        
         
        
        mov dx,offset wrong_input                                    ; if user enter a wrong choice then show an error message
        mov ah,9                                                     
        int 21h                                                      ; then ask user to enter choice again
        mov dx,offset input_again
        mov ah,9
        int 21h                                                      ;intrept 
        jmp pick                                                     ;jump to that menu again
     
        
        ret                                                          ;instruction for return
            
            
    menu2 endp                  
                     
                   
                                                        